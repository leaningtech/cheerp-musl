#define _REDIR_TIME64 1
#define _Addr long
#define _Int64 long long
#define _Reg int

#define __BYTE_ORDER 1234
#define __LONG_MAX 0x7fffffffL

#ifndef __cplusplus
#ifdef __WCHAR_TYPE__
TYPEDEF __WCHAR_TYPE__ wchar_t;
#else
TYPEDEF long wchar_t;
#endif
#endif

TYPEDEF unsigned int size_t;

#if defined(__FLT_EVAL_METHOD__) && __FLT_EVAL_METHOD__ == 0
TYPEDEF float float_t;
TYPEDEF double double_t;
#else
TYPEDEF long double float_t;
TYPEDEF long double double_t;
#endif


#if defined(__CHEERP__) && !defined(__ASMJS__)
#define CHEERP_UNION struct
#else
#define CHEERP_UNION union
#endif

TYPEDEF struct __pthread * pthread_t;

TYPEDEF struct { CHEERP_UNION { int __i[sizeof(long)==8?14:9]; volatile int __vi[sizeof(long)==8?14:9]; unsigned long __s[sizeof(long)==8?7:9]; } __u; } pthread_attr_t;

TYPEDEF struct { CHEERP_UNION { int __i[sizeof(long)==8?10:7]; volatile int __vi[sizeof(long)==8?10:7]; volatile void *volatile __p[sizeof(long)==8?5:7]; } __u; } pthread_mutex_t;

TYPEDEF struct { CHEERP_UNION { int __i[sizeof(long)==8?10:6]; volatile int __vi[sizeof(long)==8?10:6]; volatile void *volatile __p[sizeof(long)==8?5:6]; } __u; } mtx_t;

TYPEDEF struct { CHEERP_UNION { int __i[12]; volatile int __vi[12]; void *__p[12*sizeof(int)/sizeof(void*)]; } __u; } pthread_cond_t;

TYPEDEF struct { CHEERP_UNION { int __i[12]; volatile int __vi[12]; void *__p[12*sizeof(int)/sizeof(void*)]; } __u; } cnd_t;

TYPEDEF struct { CHEERP_UNION { int __i[sizeof(long)==8?14:8]; volatile int __vi[sizeof(long)==8?14:8]; void *__p[sizeof(long)==8?7:8]; } __u; } pthread_rwlock_t;

TYPEDEF struct { CHEERP_UNION { int __i[sizeof(long)==8?8:5]; volatile int __vi[sizeof(long)==8?8:5]; void *__p[sizeof(long)==8?4:5]; } __u; } pthread_barrier_t;

TYPEDEF _Int64 time_t;
STRUCT timespec { time_t tv_sec; long tv_nsec; };
STRUCT __IO_FILE  ;

#if !defined(__cplusplus)
TYPEDEF struct { _Alignas(8) long long __ll; long double __ld; } max_align_t;
#elif defined(__GNUC__)
TYPEDEF struct { __attribute__((__aligned__(8))) long long __ll; long double __ld; } max_align_t;
#else
TYPEDEF struct { alignas(8) long long __ll; long double __ld; } max_align_t;
#endif

#define __DEFINED_max_align_t
